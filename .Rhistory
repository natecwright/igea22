#height=
#Qs=E*es/Psurf
Z=seq(0,3000)
Qs=E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Tk,Qs)
abline(h=.1, col = "red")
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,3000)
Qs=E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Tk,Qs)
abline(h=.1, col = "red")
locator()
#change mm to m
dbar=seq(0,3,0.1)
c=1/(dbar)
#kg/m^3
pw=1000*1000
#change cm^-4 to m^-4
No=.08*(100^4)
LWC=pw*No*pi/(c^4*1000^4)
plot(dbar,log10(LWC))
LWC
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,3000)
Qs=E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Qs,Tk)
abline(h=.1, col = "red")
locator()
Qs
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,10000)
Qs=E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Qs,Tk)
abline(h=.1, col = "red")
locator()
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,10000)
Qs=10*E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Qs,Tk)
abline(h=.1, col = "red")
locator()
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,11000)
Qs=10*E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Qs,Tk)
abline(h=.1, col = "red")
locator()
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,11000)
Qs=10*E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Qs, Tk, xlab='T (K)', ylab='qs (g/kg)')
abline(h=.1, col = "red")
locator()
qs
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,11000)
Qs=10*E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Qs, Tk, xlab='qs (g/kg)', ylab='T (K)')
abline(h=.1, col = "red")
locator()
Qs
Tk
getOptions("max.print")
eso=611 #Pa
E=.622
Rd=287
gamma=5*10^-3 #Jkg-K-
Ts=295 #k/m
Psurf=980 #mb
t=9.8*10^-3 #K/m
To=273.15
Lv=2.5*10^6
Rv=461 #Jkg-K-
g=9.8
#es=eso*exp((Lv/Rv)*(1/To-1/Ts))
#height=
#Qs=E*es/Psurf
Z=seq(0,11000)
Qs=10*E*eso*exp((Lv/Rv)*(1/To-1/(Ts-t*Z)))/(Psurf*((Ts-gamma*Z)/Ts)^(g/(Rd*gamma)))
Tk=Ts-t*Z
#Qs2=10
plot(Qs, Tk, xlab='qs (g/kg)', ylab='T (K)')
abline(h=.1, col = "red")
locator()
a = 1:4
ch = c("a","b","c","d")
a = 1:4
ch = c("a","b","c","d")
data.frame(ch,a)
a = 1:4
ch = c("a","b","c","d")
df = data.frame(ch,a)
df
df$ch
#how to call a column
df$ch
df$ch[3]
summary(df)
colnames(df)
rownames(df)
list(a, ch,df)
lst = list(a, ch,df)
lst = list(a, ch,df)
view(lst)
lst = list(a, ch,df)
View(lst)
v1 = 1:9
v2 = 9:1
data.frame(cbind(v1,v2))
lst[1]
plot(v1)
plot(v1,v2)
plot(v1,v2^4)
plot(v1,v1^4)
plot(v1,v1^4,type = "1")
plot(v1,v1^4,type="1")
plot(v1,v1^4)
getwd()
read.csv(/Users/emmaboudreau/Downloads/holyoke_d.csv)
read.csv(Users/emmaboudreau/Downloads/holyoke_d.csv)
read.csv("/Users/emmaboudreau/Downloads/holyoke_d.csv")
hol_df = read.csv("/Users/emmaboudreau/Downloads/holyoke_d.csv")
View(df)
View(hol_df)
hol_d = read.csv("/Users/emmaboudreau/Downloads/holyoke_d.csv")
View(hol_d)
hol_d$X_00060_00003
plot(Date, hol_d$X_00060_00003)
plot(hol_d$X_00060_00003)
plot(hol_d$X_00060_00003,type="l")
jpeg('rplot.jpg',800,600)
plot(hol_d$X_00060_00003,type="l")
dev.off()
as.Date(hol_d$Date)
as.Date(hol_d$Date, format = "%m/%d/%Y")
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(field_code)
View(combined_df)
View(total_station_1_FD)
View(total_station_1_FD)
View(TS1)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(total_station_2_FD)
View(total_station_1_FD)
View(total_station_2_FD)
View(total_station_1_FD)
View(total_station_2_FD)
View(total_station_1_FD)
View(total_station_2_FD)
View(total_station_1_FD)
View(total_station_2_FD)
?transmute()
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(total_station_2_FD)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(total_station_2_FD)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(field_code)
View(hol_d)
View(total_station_1_FD)
View(total_station_2_FD)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(total_station_2_FD)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(total_station_2_FD)
View(total_station_1_FD)
View(total_station_2_FD)
View(total_station_1_FD)
View(total_station_2_FD)
View(total_station_1_FD)
View(total_station_2_FD)
source("~/Documents/IGEA/munge2.R", echo=TRUE)
View(TS1)
?write.csv()
View(hol_d)
write.csv(hol_d, file = "holyoke.csv")
getwd()
install.packages("dataRetrieval")
library("dataRetrieval")
whatNWISsites(stateCd = "MA", parameterCd = "00060")
site = whatNWISsites(stateCd = "MA", parameterCd = "00060")
site = whatNWISsites(stateCd = "MA", parameterCd = "00060")
View(site)
site_data = whatNWISdata(stateCd = "MA", parameterCd = "00060", service="dv")
View(site_data)
holyoke = readNWISdv(siteNumbers = "01172010",parameterCd = "00060",startDate = "2021-01-01",endDate = "2021-12-3")
View(holyoke)
holyoke = readNWISdv(siteNumbers = "01172010",parameterCd = "00060",startDate = "2021-01-01",endDate = "2021-12-31")
ploy(holyoke$X_00060_00003, type = "1")
plot(holyoke$X_00060_00003, type = "1")
plot(holyoke$X_00060_00003, type = "l")
library("dplyr")
holyoke %>%
select(site_no, Date, X_00060_00003)
colnames(holyoke)
colnames(holyoke)[4] = "discharge"
holyoke %>%
select(site_no, Date, discharge)
holyoke %>%
select(site_no, discharge)
holyoke %>%
select(site_no, Date, discharge)%>%
filter(Date="2021-06-30")
holyoke %>%
select(site_no, Date, discharge)%>% filter(Date="2021-06-30")
holyoke %>%
select(site_no, Date, discharge) %>% filter(Date="2021-06-30")
holyoke %>%
select(site_no, Date, discharge) %>% filter(Date=="2021-06-30")
holyoke %>%
select(site_no, Date, discharge) %>% filter(Date<="2021-06-30")
holyoke %>%
select(site_no, Date, discharge) %>% filter(Date>="2021-02-01" & Date<="2021-06-30")
#selecting based on date
holyoke %>%
select(site_no, Date, discharge) %>% filter(Date>="2021-02-01" & Date<="2021-06-30" & discharge<=5000)
#selecting based on date
fitch = readNWISdv(siteNumbers=
site_data$site_no[1]parameterCd = "00060", service="dv")
fitch = readNWISdv(siteNumbers=
site_data$site_no[1]parameterCd = "00060", startDate = 2 "2021-01-01" & endDate = "2021-12-31")
fitch = readNWISdv(siteNumbers=
site_data$site_no[1],parameterCd = "00060", startDate = 2 "2021-01-01" & endDate = "2021-12-31")
fitch = readNWISdv(siteNumbers=
site_data$site_no[1],parameterCd = "00060", startDate = 2 "2021-01-01", endDate = "2021-12-31")
fitch = readNWISdv(siteNumbers=
site_data$site_no[1],parameterCd = "00060", startDate = "2021-01-01", endDate = "2021-12-31")
df = rbind(holyoke,fitch)
colnames(fitch)[4] = "discharge"
df = rbind(holyoke,fitch)
colnames(fitch)[4] = "discharge"
df = rbind(holyoke,fitch)
df%>%
group_by(site_no) %>% summarise(discharge)
colnames(fitch)[4] = "discharge"
df = rbind(holyoke,fitch)
df%>%
group_by(site_no) %>% summarise(mean(discharge))
#7.3d
tr=8 #hr
P=30 #mmhr-
s=.5
thetas=.35
sm= -500 #mm #
ks=63.4 #mmhr- #63.4,.46
b=1
theta=s*thetas
sp=((thetas-(theta))*ks*abs(sm)*((2*b+3)/(b+3)))^(1/2)
#ponding time
tp=(sp^2/(2*P*(P-ks)))*(1+(ks/(2*(P-ks)))) #hr
#compression time
tc = tp-(sp/(2*(P-ks)))^2
#actual cumulative infiltration
Ft = P*tp+sp*(((tr-tc)^.5)-((tp-tc)^.5))+ks*(tr-tp) #t=tr for cumulative
#infiltration excess runoff
Q=P*tr-Ft
fraction=Q/(P*tr)
#7.3d
tr=8 #hr
P=30 #mmhr-
s=.5
thetas=.35
sm= -12 #mm #-500
ks=63.4 #mmhr- #63.4,.46, 11
b=1
theta=s*thetas
sp=((thetas-(theta))*ks*abs(sm)*((2*b+3)/(b+3)))^(1/2)
#ponding time
tp=(sp^2/(2*P*(P-ks)))*(1+(ks/(2*(P-ks)))) #hr
#compression time
tc = tp-(sp/(2*(P-ks)))^2
#actual cumulative infiltration
Ft = P*tp+sp*(((tr-tc)^.5)-((tp-tc)^.5))+ks*(tr-tp) #t=tr for cumulative
#infiltration excess runoff
Q=P*tr-Ft
fraction=Q/(P*tr)
View(total_station_1_FD)
View(combined_TS_df)
source("~/.active-rstudio-document", echo=TRUE)
getwd()
plot(theta,m, ylim = c(0,-100000000), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m,  main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
#7.1b
ks = .37 #cm/hr
sm = -49 #cm
thetas = .492
b = 10.4
c = 2*b+3
theta=seq(0,thetas, by=.001)
k = ks*(theta/thetas)^c
m = sm*(theta/thetas)^(-b)
plot(theta,k, main = 'Hydraulic Conductivity vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Hydraulic Conductivity (cm/hr)')
plot(theta,m,  main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-1e29), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e28
), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-1e28), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e24), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e20), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e10), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e5), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e10), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2000), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-100), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e10), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(1,-2e10), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(1e10,-2e10), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,m, ylim = c(0,-2e10), main = 'Matric Head vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Matric Head (cm)')
plot(theta,k, main = 'Hydraulic Conductivity vs. Volumetric Soil Moisture', xlab = 'Volumetric Soil Moisture',ylab = 'Hydraulic Conductivity (cm/hr)')
library(dplyr)
library(readxl)
library(tidyr)
library(stringr)
setwd('/Users/emmaboudreau/Documents/GitHub/igea22/')
ts1_excel = read_xlsx('raw_ts_data/fd/fd3_ts1.xlsx')%>%
mutate(TS_code  = "1")%>%
filter(Reach == "3EP7") #specified reach
View(ts1_excel)
ts2_excel = read_xlsx('raw_ts_data/fd/fd3_ts2.xlsx')%>%
mutate(TS_code  = "2")%>%
filter(Reach == "3EP7") #specified reach
#read in metadata
metadata_excel = read_xlsx('raw_ts_data/fd/fd3_metadata.xlsx')
ts1_reach = read.delim("raw_ts_data/group3.n/ep7_ts1.txt",
header = FALSE, nrows= 1, dec = ".", sep = '\t')%>%
transmute(Reach = V1)
ts2_reach = read.delim("raw_ts_data/group3.n/ep7_ts2.txt",
header = FALSE, nrows= 1, dec = ".", sep = '\t')%>%
transmute(Reach = V1)
View(ts2_reach)
View(ts2_excel)
ts1_txt = read.delim("raw_ts_data/group3.n/ep7_ts1.txt",
skip = 1, header = TRUE, dec = ".", sep = ',')%>%
mutate(TS_code = "1")%>%
mutate(Reach = ts1_reach$Reach)%>%
mutate(PointID=as.double(PointID))
View(ts1_txt)
ts1_txt = ts1_txt[2:nrow(ts1_txt),]
ts1_txt = ts1_txt[2:nrow(ts1_txt),]
ts2_txt = read.delim("raw_ts_data/group3.n/ep7_ts2.txt",
skip = 1, header = TRUE, dec = ".", sep = ',')%>%
mutate(TS_code = "2")%>%
mutate(Reach = ts2_reach$Reach)%>%
mutate(PointID=as.double(PointID))
ts2_txt = ts2_txt[2:nrow(ts2_txt),]
ts_excel_df = rbind(ts1_excel,ts2_excel)
View(ts_excel_df)
ts_txt_df = rbind(ts1_txt,ts2_txt)
View(ts_txt_df)
# this joins excel (digitized data) with metadata for ts1
joined_df1 = left_join(ts1_excel, metadata_excel, by='Reach')%>%
filter(Reach == station_ID)
View(metadata_excel)
View(ts1_excel)
oined_df1=left_join(ts1_excel, metadata_excel, by='Reach')
joined_df2=left_join(ts2_excel, metadata_excel, by='Reach')
joined_df1=left_join(ts1_excel, metadata_excel, by='Reach')
joined_df2=left_join(ts2_excel, metadata_excel, by='Reach')
View(joined_df2)
ts_excel_df = rbind(ts1_excel,ts2_excel)
#row bind txt files for ts1 and ts2
ts_txt_df = rbind(ts1_txt,ts2_txt)
#row bind excel files for ts1 and ts2
ts_excel_df = rbind(joined_df1,joined_df2)
#created data frame with excel and text file for specific reach
master_df = left_join(joined_df3, joined_df4, by=c('Reach', 'TS_code', 'PointID'))%>%
mutate(uniqueID = paste(Reach,TS_code,Location,XSection))%>%
mutate(AP = substr(uniqueID,9,9))%>%
mutate(LWR = substr(uniqueID,8,8))%>%
mutate(number = substr(uniqueID,10,10))%>%
mutate(UID2 = paste0(Reach,TS_code,LWR,number,XSection))%>%
mutate(Elevation = as.double(str_remove_all(Elevation, ' ')))%>%
filter(PointID==101)
#row bind excel files for ts1 and ts2
joined_df3 = rbind(joined_df1,joined_df2)
#row bind txt files for ts1 and ts2
joined_df4 = rbind(ts1_txt,ts2_txt)
master_df = left_join(joined_df3, joined_df4, by=c('Reach', 'TS_code', 'PointID'))%>%
mutate(uniqueID = paste(Reach,TS_code,Location,XSection))%>%
mutate(AP = substr(uniqueID,9,9))%>%
mutate(LWR = substr(uniqueID,8,8))%>%
mutate(number = substr(uniqueID,10,10))%>%
mutate(UID2 = paste0(Reach,TS_code,LWR,number,XSection))%>%
mutate(Elevation = as.double(str_remove_all(Elevation, ' ')))%>%
filter(PointID==101)
#created data frame with excel and text file for specific reach
master_df = left_join(joined_df3, joined_df4, by=c('Reach', 'TS_code', 'PointID'))%>%
mutate(uniqueID = paste(Reach,TS_code,Location,XSection))%>%
mutate(AP = substr(uniqueID,9,9))%>%
mutate(LWR = substr(uniqueID,8,8))%>%
mutate(number = substr(uniqueID,10,10))%>%
mutate(UID2 = paste0(Reach,TS_code,LWR,number,XSection))%>%
mutate(Elevation = as.double(str_remove_all(Elevation, ' ')))%>%
filter(PointID==101)
View(joined_df4)
master_df = left_join(joined_df3, joined_df4, by=c('Reach', 'TS_code', 'PointID'))
View(master_df)
